#!/usr/bin/python

import subprocess
import os
import sys
sys.path.insert(0, '/usr/local/munki')
sys.path.insert(0, '/usr/local/munkireport')
from Foundation import CFPreferencesCopyAppValue
from munkilib import FoundationPlist

def get_pref_value(key, domain):
    value = CFPreferencesCopyAppValue(key, domain)
    if(value is not None):
        return value
    elif(value is not None and len(value) == 0):
        return ""
    else:
        return ""

def main():
    """Main"""
    # Create cache dir if it does not exist
    cachedir = '%s/cache' % os.path.dirname(os.path.realpath(__file__))
    separator = "="
    pl=FoundationPlist.readPlist("/Applications/NoMAD.app/Contents/Info.plist")
    nomad_version = pl['CFBundleShortVersionString']
    nl=FoundationPlist.readPlist("/Library/Security/SecurityAgentPlugins/NoMADLoginAD.bundle/Contents/Info.plist")
    nomad_login_version = nl['CFBundleShortVersionString']
    try:
        cmd = ["/usr/bin/security", "authorizationdb", "read", "system.login.console"]
        proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        stdout, _ = proc.communicate()
        if stdout:
            authdb = FoundationPlist.readPlistFromString(stdout)
    except (IOError, OSError):
        pass
    mechs = authdb["mechanisms"]
    for mech in mechs:
        if "NoMADLogin" in mech:
            nomad_login_enabled = True
        else:
            nomad_login_enabled = False
            
    # Write memory results to cache
    output_file = os.path.join(cachedir, 'nomad.txt')
    f = open(output_file, "w")
    f.write("nomad_user %s %s\n" % (separator, get_pref_value('UserShortName', 'com.trusourcelabs.NoMAD')))
    f.write("addomain %s %s\n" % (separator, get_pref_value('ADDomain', 'com.trusourcelabs.NoMAD')))
    f.write("kerberos_realm %s %s\n" % (separator, get_pref_value('KerberosRealm', 'com.trusourcelabs.NoMAD')))
    f.write("nomad_enabled %s %s\n" % (separator, int(get_pref_value('SignedIn', 'com.trusourcelabs.NoMAD'))))
    f.write("local_password_sync %s %s\n" % (separator, int(get_pref_value('LocalPasswordSync', 'com.trusourcelabs.NoMAD'))))
    f.write("use_keychain %s %s\n" % (separator, int(get_pref_value('UseKeychain', 'com.trusourcelabs.NoMAD'))))
    f.write("nomad_version %s %s\n" % (separator, nomad_version))
    f.write("nomad_login_version %s %s\n" % (separator, nomad_login_version))
    f.write("nomad_login_enabled %s %s\n" % (separator, int(nomad_login_enabled)))
    f.close()
    
if __name__ == "__main__":
    main()
